// Mocks generated by Mockito 5.0.10 from annotations
// in lilay/test/core/auth/microsoft/microsoft_auth_provider_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:convert' as _i7;
import 'dart:typed_data' as _i8;

import 'package:http/src/base_request.dart' as _i9;
import 'package:http/src/client.dart' as _i5;
import 'package:http/src/response.dart' as _i2;
import 'package:http/src/streamed_response.dart' as _i3;
import 'package:lilay/core/auth/auth_provider.dart' as _i4;
import 'package:lilay/core/auth/microsoft/microsoft_account.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeResponse extends _i1.Fake implements _i2.Response {}

class _FakeStreamedResponse extends _i1.Fake implements _i3.StreamedResponse {}

class _FakeAuthProvider extends _i1.Fake implements _i4.AuthProvider {}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i5.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);

  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i6.Future<String>);

  @override
  _i6.Future<_i8.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i8.Uint8List>.value(_i8.Uint8List(0)))
          as _i6.Future<_i8.Uint8List>);

  @override
  _i6.Future<_i3.StreamedResponse> send(_i9.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i3.StreamedResponse>.value(_FakeStreamedResponse()))
          as _i6.Future<_i3.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [MicrosoftAccount].
///
/// See the documentation for Mockito's code generation for more information.
class MockMicrosoftAccount extends _i1.Mock implements _i10.MicrosoftAccount {
  MockMicrosoftAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get accessToken =>
      (super.noSuchMethod(Invocation.getter(#accessToken), returnValue: '')
          as String);

  @override
  set accessToken(String? _accessToken) =>
      super.noSuchMethod(Invocation.setter(#accessToken, _accessToken),
          returnValueForMissingStub: null);

  @override
  String get msAccessToken =>
      (super.noSuchMethod(Invocation.getter(#msAccessToken), returnValue: '')
          as String);

  @override
  set msAccessToken(String? _msAccessToken) =>
      super.noSuchMethod(Invocation.setter(#msAccessToken, _msAccessToken),
          returnValueForMissingStub: null);

  @override
  String get refreshToken =>
      (super.noSuchMethod(Invocation.getter(#refreshToken), returnValue: '')
          as String);

  @override
  set refreshToken(String? _refreshToken) =>
      super.noSuchMethod(Invocation.setter(#refreshToken, _refreshToken),
          returnValueForMissingStub: null);

  @override
  String get xblToken =>
      (super.noSuchMethod(Invocation.getter(#xblToken), returnValue: '')
          as String);

  @override
  set xblToken(String? _xblToken) =>
      super.noSuchMethod(Invocation.setter(#xblToken, _xblToken),
          returnValueForMissingStub: null);

  @override
  String get xblUHS =>
      (super.noSuchMethod(Invocation.getter(#xblUHS), returnValue: '')
          as String);

  @override
  set xblUHS(String? _xblUHS) =>
      super.noSuchMethod(Invocation.setter(#xblUHS, _xblUHS),
          returnValueForMissingStub: null);

  @override
  String get xstsToken =>
      (super.noSuchMethod(Invocation.getter(#xstsToken), returnValue: '')
          as String);

  @override
  set xstsToken(String? _xstsToken) =>
      super.noSuchMethod(Invocation.setter(#xstsToken, _xstsToken),
          returnValueForMissingStub: null);

  @override
  bool get selected =>
      (super.noSuchMethod(Invocation.getter(#selected), returnValue: false)
          as bool);

  @override
  set selected(bool? _selected) =>
      super.noSuchMethod(Invocation.setter(#selected, _selected),
          returnValueForMissingStub: null);

  @override
  String get profileName =>
      (super.noSuchMethod(Invocation.getter(#profileName), returnValue: '')
          as String);

  @override
  bool get requiresReauth => (super
          .noSuchMethod(Invocation.getter(#requiresReauth), returnValue: false)
      as bool);

  @override
  String get type =>
      (super.noSuchMethod(Invocation.getter(#type), returnValue: '') as String);

  @override
  String get username =>
      (super.noSuchMethod(Invocation.getter(#username), returnValue: '')
          as String);

  @override
  String get uuid =>
      (super.noSuchMethod(Invocation.getter(#uuid), returnValue: '') as String);

  @override
  bool get paid =>
      (super.noSuchMethod(Invocation.getter(#paid), returnValue: false)
          as bool);

  @override
  _i4.AuthProvider get authProvider =>
      (super.noSuchMethod(Invocation.getter(#authProvider),
          returnValue: _FakeAuthProvider()) as _i4.AuthProvider);

  @override
  _i6.Future<void> refresh(_i5.Client? client) =>
      (super.noSuchMethod(Invocation.method(#refresh, [client]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);

  @override
  _i6.Future<void> updatePaymentStatus(_i5.Client? client) =>
      (super.noSuchMethod(Invocation.method(#updatePaymentStatus, [client]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);

  @override
  _i6.Future<void> requestMinecraftToken(
          _i5.Client? client, dynamic Function(String)? error) =>
      (super.noSuchMethod(
          Invocation.method(#requestMinecraftToken, [client, error]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);

  @override
  _i6.Future<void> requestProfile(
          dynamic Function(String)? error, _i5.Client? client) =>
      (super.noSuchMethod(Invocation.method(#requestProfile, [error, client]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);

  @override
  _i6.Future<void> invalidate(_i5.Client? client) =>
      (super.noSuchMethod(Invocation.method(#invalidate, [client]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
}
