// Mocks generated by Mockito 5.0.10 from annotations
// in lilay/test/core/download/rule_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:http/src/client.dart' as _i5;
import 'package:lilay/core/auth/account.dart' as _i3;
import 'package:lilay/core/auth/auth_provider.dart' as _i2;
import 'package:lilay/core/profile/profile.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeAuthProvider extends _i1.Fake implements _i2.AuthProvider {}

/// A class which mocks [Account].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccount extends _i1.Mock implements _i3.Account {
  MockAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get username =>
      (super.noSuchMethod(Invocation.getter(#username), returnValue: '')
          as String);
  @override
  String get accessToken =>
      (super.noSuchMethod(Invocation.getter(#accessToken), returnValue: '')
          as String);
  @override
  String get profileName =>
      (super.noSuchMethod(Invocation.getter(#profileName), returnValue: '')
          as String);
  @override
  String get uuid =>
      (super.noSuchMethod(Invocation.getter(#uuid), returnValue: '') as String);
  @override
  String get type =>
      (super.noSuchMethod(Invocation.getter(#type), returnValue: '') as String);
  @override
  bool get requiresReauth => (super
          .noSuchMethod(Invocation.getter(#requiresReauth), returnValue: false)
      as bool);
  @override
  bool get selected =>
      (super.noSuchMethod(Invocation.getter(#selected), returnValue: false)
          as bool);
  @override
  bool get paid =>
      (super.noSuchMethod(Invocation.getter(#paid), returnValue: false)
          as bool);
  @override
  set selected(bool? sel) =>
      super.noSuchMethod(Invocation.setter(#selected, sel),
          returnValueForMissingStub: null);
  @override
  _i2.AuthProvider get authProvider =>
      (super.noSuchMethod(Invocation.getter(#authProvider),
          returnValue: _FakeAuthProvider()) as _i2.AuthProvider);
  @override
  _i4.Future<void> refresh(_i5.Client? client) =>
      (super.noSuchMethod(Invocation.method(#refresh, [client]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updatePaymentStatus(_i5.Client? client) =>
      (super.noSuchMethod(Invocation.method(#updatePaymentStatus, [client]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> invalidate(_i5.Client? client) =>
      (super.noSuchMethod(Invocation.method(#invalidate, [client]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [Profile].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfile extends _i1.Mock implements _i6.Profile {
  MockProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  set id(int? _id) => super.noSuchMethod(Invocation.setter(#id, _id),
      returnValueForMissingStub: null);
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  set name(String? _name) => super.noSuchMethod(Invocation.setter(#name, _name),
      returnValueForMissingStub: null);
  @override
  String get version =>
      (super.noSuchMethod(Invocation.getter(#version), returnValue: '')
          as String);
  @override
  set version(String? _version) =>
      super.noSuchMethod(Invocation.setter(#version, _version),
          returnValueForMissingStub: null);
  @override
  set gameDirectory(String? _gameDirectory) =>
      super.noSuchMethod(Invocation.setter(#gameDirectory, _gameDirectory),
          returnValueForMissingStub: null);
  @override
  set resolutionWidth(int? _resolutionWidth) =>
      super.noSuchMethod(Invocation.setter(#resolutionWidth, _resolutionWidth),
          returnValueForMissingStub: null);
  @override
  set resolutionHeight(int? _resolutionHeight) => super.noSuchMethod(
      Invocation.setter(#resolutionHeight, _resolutionHeight),
      returnValueForMissingStub: null);
  @override
  set javaExecutable(String? _javaExecutable) =>
      super.noSuchMethod(Invocation.setter(#javaExecutable, _javaExecutable),
          returnValueForMissingStub: null);
  @override
  String get jvmArguments =>
      (super.noSuchMethod(Invocation.getter(#jvmArguments), returnValue: '')
          as String);
  @override
  set jvmArguments(String? _jvmArguments) =>
      super.noSuchMethod(Invocation.setter(#jvmArguments, _jvmArguments),
          returnValueForMissingStub: null);
  @override
  String get gameArguments =>
      (super.noSuchMethod(Invocation.getter(#gameArguments), returnValue: '')
          as String);
  @override
  set gameArguments(String? _gameArguments) =>
      super.noSuchMethod(Invocation.setter(#gameArguments, _gameArguments),
          returnValueForMissingStub: null);
  @override
  bool get selected =>
      (super.noSuchMethod(Invocation.getter(#selected), returnValue: false)
          as bool);
  @override
  set selected(bool? _selected) =>
      super.noSuchMethod(Invocation.setter(#selected, _selected),
          returnValueForMissingStub: null);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
